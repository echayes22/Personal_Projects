# -*- coding: utf-8 -*-
"""Hayes_A5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vSzHstVW4F7o9kRC-58_mtRKl78RYwUu
"""

#Imports for imaging 
!wget . http://www.youandthemat.com/wp-content/uploads/nature-2-26-17.jpg
!wget https://s3-us-west-2.amazonaws.com/uw-s3-cdn/wp-content/uploads/sites/6/2017/11/04133712/waterfall.jpg
!wget https://buddhisteconomics.net/wp-content/uploads/2017/10/hdwp693968124.jpg
!wget https://upload.wikimedia.org/wikipedia/commons/d/dc/Skyscrapers_of_Shinjuku_2009_January_%28revised%29.jpg
!wget https://www.worldatlas.com/r/w728-h425-c728x425/upload/db/04/18/toronto-ontario.jpg
!wget https://www.valdosta.edu/academics/online-programs/images/slideshow-new-vsu-arch.jpg
!wget https://www.valdosta.edu/administration/planning/images/planningimage.jpg
!wget http://www.carterusa.com/project-images/develop/program-Project-Management/higher-education/Valdosta-State-Student-Housing/gal-1.JPG

import numpy as np
import matplotlib.pyplot as plt
from sklearn.cluster import KMeans

#Some images would not load properly 
#(Issue! ( file like --> Skyscrapers_of_Shinjuku_2009_January_%28revised%29.jpg))

#tested ones that did; edit* --> #Success!

from skimage.io import imread
im = imread ('nature-2-26-17.jpg')
from skimage.transform import resize

from skimage.io import imread
im2 = imread ('waterfall.jpg')
from skimage.transform import resize

from skimage.io import imread
im3 = imread ('toronto-ontario.jpg')
from skimage.transform import resize

from skimage.io import imread
im4 = imread ('slideshow-new-vsu-arch.jpg')
from skimage.transform import resize

from skimage.io import imread
im5 = imread ('planningimage.jpg')
from skimage.transform import resize

#Test Display of Images: plt.imshow()
plt.imshow(im)
plt.imshow(im2)
plt.imshow(im3)
plt.imshow(im4)
plt.imshow(im5)

#Resize the images (that loaded properly; edit* --> issue persists!)
#Technical Condistion satisfy --> " Make sure your images are normalized in the [0, 1] range."

im_shrink = resize(im, (im.shape[0] // 10, im.shape[1] // 10), anti_aliasing=True)
im_shrink2 = resize(im2, (im2.shape[0] // 10, im2.shape[1] // 10), anti_aliasing=True)
im_shrink3 = resize(im3, (im3.shape[0] // 10, im3.shape[1] // 10), anti_aliasing=True)
im_shrink4 = resize(im4, (im4.shape[0] // 10, im4.shape[1] // 10), anti_aliasing=True)
im_shrink5 = resize(im5, (im5.shape[0] // 10, im5.shape[1] // 10), anti_aliasing=True)

#Success!

#Retest Display to show pixelated(blurry)
# remeber to call new variables; not the original! (im_shrink)

plt.imshow(im_shrink)
plt.imshow(im_shrink2)
plt.imshow(im_shrink3)
plt.imshow(im_shrink4)
plt.imshow(im_shrink5)

#Success!

#Chart the rows of data as pixels 
#Image 1
i1 = np.reshape(im_shrink, (np.shape(im_shrink)[0] * np.shape(im_shrink)[1], 3))
np.shape(i1)
kmeans = KMeans(n_clusters=2, random_state=0).fit(i1)

#Image2
i2 = np.reshape(im_shrink2, (np.shape(im_shrink2)[0] * np.shape(im_shrink2)[1], 3))
np.shape(i2)
kmeans2 = KMeans(n_clusters=2, random_state=0).fit(i2)

#Image3
i3 = np.reshape(im_shrink3, (np.shape(im_shrink3)[0] * np.shape(im_shrink3)[1], 3))
np.shape(i3)
kmeans3 = KMeans(n_clusters=2, random_state=0).fit(i3)

#Image4
i4 = np.reshape(im_shrink4, (np.shape(im_shrink4)[0] * np.shape(im_shrink4)[1], 3))
np.shape(i4)
kmeans4 = KMeans(n_clusters=2, random_state=0).fit(i4)

#Image5
i5 = np.reshape(im_shrink5, (np.shape(im_shrink5)[0] * np.shape(im_shrink5)[1], 3))
np.shape(i5)
kmeans5 = KMeans(n_clusters=2, random_state=0).fit(i5)

#Image 1 edit* --> #Success!
n_entry = np.array(i1)
for row in range(np.shape(n_entry)[0]):
  n_entry[row, :] = kmeans.cluster_centers_[kmeans.labels_[row], :]

recolored_image = np.reshape(n_entry, (im.shape[0] // 10, im.shape[1] // 10, 3))
np.shape(recolored_image)

plt.imshow(recolored_image)

#Image 2 edit* --> #Success!
n_entry2 = np.array(i2)
for row in range(np.shape(n_entry2)[0]):
  n_entry2[row, :] = kmeans2.cluster_centers_[kmeans2.labels_[row], :]

recolored_image2 = np.reshape(n_entry2, (im2.shape[0] // 10, im2.shape[1] // 10, 3))
np.shape(recolored_image2)

plt.imshow(recolored_image2)

#Image 3 edit* --> #Success!
n_entry3 = np.array(i3)
for row in range(np.shape(n_entry3)[0]):
  n_entry3[row, :] = kmeans3.cluster_centers_[kmeans3.labels_[row], :]

recolored_image3 = np.reshape(n_entry3, (im3.shape[0] // 10, im3.shape[1] // 10, 3))
np.shape(recolored_image3)

plt.imshow(recolored_image3)

#Image 4 edit* --> #Success!
n_entry4 = np.array(i4)
for row in range(np.shape(n_entry4)[0]):
  n_entry4[row, :] = kmeans4.cluster_centers_[kmeans4.labels_[row], :]

recolored_image4 = np.reshape(n_entry4, (im4.shape[0] // 10, im4.shape[1] // 10, 3))
np.shape(recolored_image4)

plt.imshow(recolored_image4)

#Image 5  edit* --> #Success!
n_entry5 = np.array(i5)
for row in range(np.shape(n_entry5)[0]):
  n_entry5[row, :] = kmeans5.cluster_centers_[kmeans5.labels_[row], :]

recolored_image5 = np.reshape(n_entry5, (im5.shape[0] // 10, im5.shape[1] // 10, 3))
np.shape(recolored_image5)

plt.imshow(recolored_image5)